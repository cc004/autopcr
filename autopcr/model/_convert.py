from io import StringIO
import re
import os

member = re.compile(r'(public) ([A-Za-z0-9_<>\[\\\]]*?) ([A-Za-z0-9_]*?)( \{ get; .*?set; \})?\n')
enum = re.compile('\s*([A-Za-z0-9_]+?)( = (-?[0-9]*))?,?\n')
upper = re.compile('([A-Z]|(?<=rarity)6)')
addtask = re.compile('addTask\(eApiType\.(.*?), (new ApiManager.)?([^ ]*?)PostParam')
list = re.compile('List<(.*)>')
fp_common = open('common.py', 'w')
fp_req = open('requests.py', 'w')
fp_resp = open('responses.py', 'w')
fp_enum = open('enums.py', 'w')

fp_common.write('from typing import List\nfrom .enums import *\nfrom pydantic import BaseModel\n\n')
fp_req.write('from typing import List\nfrom .modelbase import Request\nfrom .responses import *\nfrom .common import *\nfrom .enums import *\n\n')
fp_resp.write('from typing import List\nfrom .modelbase import ResponseBase\nfrom .common import *\nfrom .enums import *\n\n')
fp_enum.write('from enum import Enum\n\n')

class eApiTypeType:
    def __getattribute__(self, __name: str) -> str:
        return __name

eApiType = eApiTypeType()

urls_t = [
	{
				eApiType.AccountDeleteDeleteRequest,
				"account_delete/delete_request"
			},
			{
				eApiType.AccountDeleteCancel,
				"account_delete/cancel"
			},
			{
				eApiType.ArcadeTop,
				"arcade/top"
			},
			{
				eApiType.ArcadeBuy,
				"arcade/buy"
			},
			{
				eApiType.ArcadeSyncStoryList,
				"arcade/sync_story_list"
			},
			{
				eApiType.ArcadeStoryList,
				"arcade/story_list"
			},
			{
				eApiType.ArcadeReadStory,
				"arcade/read_story"
			},
			{
				eApiType.ArenaInfo,
				"arena/info"
			},
			{
				eApiType.ArenaSearch,
				"arena/search"
			},
			{
				eApiType.ArenaApply,
				"arena/apply"
			},
			{
				eApiType.ArenaCancel,
				"arena/cancel"
			},
			{
				eApiType.ArenaStart,
				"arena/start"
			},
			{
				eApiType.ArenaFinish,
				"arena/finish"
			},
			{
				eApiType.ArenaCancelInterval,
				"arena/cancel_interval"
			},
			{
				eApiType.ArenaResetBattleNumber,
				"arena/reset_battle_number"
			},
			{
				eApiType.ArenaRanking,
				"arena/ranking"
			},
			{
				eApiType.ArenaHistory,
				"arena/history"
			},
			{
				eApiType.ArenaHistoryDetail,
				"arena/history_detail"
			},
			{
				eApiType.ArenaReplay,
				"arena/replay"
			},
			{
				eApiType.ArenaMoveGroup,
				"arena/move_group"
			},
			{
				eApiType.ArenaHistoryDamageRanking,
				"arena/history_damage_ranking"
			},
			{
				eApiType.ArenaTimeRewardAccept,
				"arena/time_reward_accept"
			},
			{
				eApiType.ArenaSuspendFinish,
				"arena/suspend_finish"
			},
			{
				eApiType.BroadcastAccessBroadcast,
				"broadcast/access_broadcast"
			},
			{
				eApiType.CggGachaExec,
				"cgg/gacha_exec"
			},
			{
				eApiType.CggTop,
				"cgg/top"
			},
			{
				eApiType.CggGetUserInfo,
				"cgg/get_user_info"
			},
			{
				eApiType.CggExchangeLuppi,
				"cgg/exchange_luppi"
			},
			{
				eApiType.CggDeleteNewFlag,
				"cgg/delete_new_flag"
			},
			{
				eApiType.CggGachaReset,
				"cgg/gacha_reset"
			},
			{
				eApiType.CharaETicketRewards,
				"chara_e_ticket/rewards"
			},
			{
				eApiType.CharaETicketExchange,
				"chara_e_ticket/exchange"
			},
			{
				eApiType.CheckCheckAgreement,
				"check/check_agreement"
			},
			{
				eApiType.CheckAcceptAgreement,
				"check/accept_agreement"
			},
			{
				eApiType.ClanInfo,
				"clan/info"
			},
			{
				eApiType.ClanOthersInfo,
				"clan/others_info"
			},
			{
				eApiType.ClanCreate,
				"clan/create"
			},
			{
				eApiType.ClanUpdate,
				"clan/update"
			},
			{
				eApiType.ClanBreakup,
				"clan/breakup"
			},
			{
				eApiType.ClanJoin,
				"clan/join"
			},
			{
				eApiType.ClanLeave,
				"clan/leave"
			},
			{
				eApiType.ClanRemove,
				"clan/remove"
			},
			{
				eApiType.ClanSearchClan,
				"clan/search_clan"
			},
			{
				eApiType.ClanSearchUser,
				"clan/search_user"
			},
			{
				eApiType.ClanJoinRequestList,
				"clan/join_request_list"
			},
			{
				eApiType.ClanJoinRequestCancel,
				"clan/join_request_cancel"
			},
			{
				eApiType.ClanJoinRequestAccept,
				"clan/join_request_accept"
			},
			{
				eApiType.ClanJoinRequestReject,
				"clan/join_request_reject"
			},
			{
				eApiType.ClanSetDispatchStatus,
				"clan/set_dispatch_status"
			},
			{
				eApiType.ClanChangeRole,
				"clan/change_role"
			},
			{
				eApiType.ClanChat,
				"clan/chat"
			},
			{
				eApiType.ClanChatDamageReport,
				"clan/chat_damage_report"
			},
			{
				eApiType.ClanChatInfoList,
				"clan/chat_info_list"
			},
			{
				eApiType.ClanLike,
				"clan/like"
			},
			{
				eApiType.ClanCheckExistClan,
				"clan/check_exist_clan"
			},
			{
				eApiType.ClanClanMemberBattleStart,
				"clan/clan_member_battle_start"
			},
			{
				eApiType.ClanClanMemberBattleFinish,
				"clan/clan_member_battle_finish"
			},
			{
				eApiType.ClanBattleBossHistory,
				"clan_battle/boss_history"
			},
			{
				eApiType.ClanBattleBossInfo,
				"clan_battle/boss_info"
			},
			{
				eApiType.ClanBattleDamageReport,
				"clan_battle/damage_report"
			},
			{
				eApiType.ClanBattleFinish,
				"clan_battle/finish"
			},
			{
				eApiType.ClanBattlePeriodRanking,
				"clan_battle/period_ranking"
			},
			{
				eApiType.ClanBattleBossRankingInClan,
				"clan_battle/boss_ranking_in_clan"
			},
			{
				eApiType.ClanBattleResetHp,
				"clan_battle/reset_hp"
			},
			{
				eApiType.ClanBattleStart,
				"clan_battle/start"
			},
			{
				eApiType.ClanBattleSupportUnitList,
				"clan_battle/support_unit_list"
			},
			{
				eApiType.ClanBattleSupportUnitList2,
				"clan_battle/support_unit_list_2"
			},
			{
				eApiType.ClanBattleTop,
				"clan_battle/top"
			},
			{
				eApiType.ClanBattleHistoryReport,
				"clan_battle/history_report"
			},
			{
				eApiType.ClanBattleRehearsalStart,
				"clan_battle/rehearsal_start"
			},
			{
				eApiType.ClanBattleRehearsalFinish,
				"clan_battle/rehearsal_finish"
			},
			{
				eApiType.ClanBattleReloadDetailInfo,
				"clan_battle/reload_detail_info"
			},
			{
				eApiType.ClanBattleMylog,
				"clan_battle/mylog"
			},
			{
				eApiType.ClanBattleDeleteRehearsalMylog,
				"clan_battle/delete_rehearsal_mylog"
			},
			{
				eApiType.ClanBattleSaveRehearsalMylog,
				"clan_battle/save_rehearsal_mylog"
			},
			{
				eApiType.ClanBattleConfirmRehearsalMylog,
				"clan_battle/confirm_rehearsal_mylog"
			},
			{
				eApiType.ClanBattleMylogDetail,
				"clan_battle/mylog_detail"
			},
			{
				eApiType.ClanBattleDeleteTrainingMylog,
				"clan_battle/delete_training_mylog"
			},
			{
				eApiType.ClanBattleSaveTrainingMylog,
				"clan_battle/save_training_mylog"
			},
			{
				eApiType.ClanBattleConfirmTrainingMylog,
				"clan_battle/confirm_training_mylog"
			},
			{
				eApiType.ClanBattleTrainingStart,
				"clan_battle/training_start"
			},
			{
				eApiType.ClanBattleTrainingFinish,
				"clan_battle/training_finish"
			},
			{
				eApiType.ClanBattleMissionIndex,
				"clan_battle/mission_index"
			},
			{
				eApiType.ClanBattleSuggestDeckList,
				"clan_battle/suggest_deck_list"
			},
			{
				eApiType.ClanBattleSuggestDeckReplay,
				"clan_battle/suggest_deck_replay"
			},
			{
				eApiType.ClanBattleScoreArchiveTop,
				"clan_battle/score_archive_top"
			},
			{
				eApiType.ClanBattleSuggestDeckReplayReport,
				"clan_battle/suggest_deck_replay_report"
			},
			{
				eApiType.ClanBattleTimelineReport,
				"clan_battle/timeline_report"
			},
			{
				eApiType.ClanBattleBattleLogList,
				"clan_battle/battle_log_list"
			},
			{
				eApiType.ClanBattleBattleLogDeletedFavoriteIds,
				"clan_battle/battle_log_deleted_favorite_ids"
			},
			{
				eApiType.ClanDetail,
				"clan/detail"
			},
			{
				eApiType.ClanInvite,
				"clan/invite"
			},
			{
				eApiType.ClanCancelInvite,
				"clan/cancel_invite"
			},
			{
				eApiType.ClanBlockInvite,
				"clan/block_invite"
			},
			{
				eApiType.ClanCancelBlockInvite,
				"clan/cancel_block_invite"
			},
			{
				eApiType.ClanRejectInvite,
				"clan/reject_invite"
			},
			{
				eApiType.ClanInvitedClanList,
				"clan/invited_clan_list"
			},
			{
				eApiType.ClanInviteUserList,
				"clan/invite_user_list"
			},
			{
				eApiType.ClanBlockList,
				"clan/block_list"
			},
			{
				eApiType.ClanUpdateInviteAcceptFlag,
				"clan/update_invite_accept_flag"
			},
			{
				eApiType.DailyTaskTop,
				"daily_task/top"
			},
			{
				eApiType.DailyTaskSaveRewards,
				"daily_task/save_rewards"
			},
			{
				eApiType.DailyTaskGetRewards,
				"daily_task/get_rewards"
			},
			{
				eApiType.DeckUpdate,
				"deck/update"
			},
			{
				eApiType.DeckUpdateList,
				"deck/update_list"
			},
			{
				eApiType.TdfTop,
				"tdf/top"
			},
			{
				eApiType.TdfReset,
				"tdf/reset"
			},
			{
				eApiType.TdfSupportUnitList,
				"tdf/support_unit_list"
			},
			{
				eApiType.TdfBattleStart,
				"tdf/battle_start"
			},
			{
				eApiType.TdfRehearsalBattleStart,
				"tdf/rehearsal_battle_start"
			},
			{
				eApiType.TdfBattleFinish,
				"tdf/battle_finish"
			},
			{
				eApiType.TdfRehearsalBattleFinish,
				"tdf/rehearsal_battle_finish"
			},
			{
				eApiType.TdfBattleRetire,
				"tdf/battle_retire"
			},
			{
				eApiType.TdfRehearsalBattleRetire,
				"tdf/rehearsal_battle_retire"
			},
			{
				eApiType.TdfTreasureBattleStart,
				"tdf/treasure_battle_start"
			},
			{
				eApiType.TdfTreasureBattleFinish,
				"tdf/treasure_battle_finish"
			},
			{
				eApiType.TdfTreasureBattleRetire,
				"tdf/treasure_battle_retire"
			},
			{
				eApiType.DungeonInfo,
				"dungeon/info"
			},
			{
				eApiType.DungeonEnterArea,
				"dungeon/enter_area"
			},
			{
				eApiType.DungeonDispatchUnitList2,
				"dungeon/dispatch_unit_list_2"
			},
			{
				eApiType.DungeonBattleStart,
				"dungeon/battle_start"
			},
			{
				eApiType.DungeonBattleFinish,
				"dungeon/battle_finish"
			},
			{
				eApiType.DungeonReset,
				"dungeon/reset"
			},
			{
				eApiType.DungeonBattleRetire,
				"dungeon/battle_retire"
			},
			{
				eApiType.DungeonSkip,
				"dungeon/skip"
			},
			{
				eApiType.DungeonSpecialBattleStart,
				"dungeon/special_battle_start"
			},
			{
				eApiType.DungeonSpecialBattleFinish,
				"dungeon/special_battle_finish"
			},
			{
				eApiType.SpecialDungeonTop,
				"special_dungeon/top"
			},
			{
				eApiType.SpecialDungeonEnterArea,
				"special_dungeon/enter_area"
			},
			{
				eApiType.SpecialDungeonMylog,
				"special_dungeon/mylog"
			},
			{
				eApiType.SpecialDungeonBattleStart,
				"special_dungeon/battle_start"
			},
			{
				eApiType.SpecialDungeonBattleRetire,
				"special_dungeon/battle_retire"
			},
			{
				eApiType.SpecialDungeonBattleFinish,
				"special_dungeon/battle_finish"
			},
			{
				eApiType.SpecialDungeonSpecialBattleStart,
				"special_dungeon/special_battle_start"
			},
			{
				eApiType.SpecialDungeonSpecialBattleFinish,
				"special_dungeon/special_battle_finish"
			},
			{
				eApiType.SpecialDungeonReset,
				"special_dungeon/reset"
			},
			{
				eApiType.SpecialDungeonSupportUnitList,
				"special_dungeon/support_unit_list"
			},
			{
				eApiType.EmblemTop,
				"emblem/top"
			},
			{
				eApiType.EmblemChange,
				"emblem/change"
			},
			{
				eApiType.EquipmentAutomaticEnhance,
				"equipment/automatic_enhance"
			},
			{
				eApiType.EquipmentAutomaticEnhanceUnique,
				"equipment/automatic_enhance_unique"
			},
			{
				eApiType.EquipmentEnhance,
				"equipment/enhance"
			},
			{
				eApiType.EquipmentEnhanceUnique,
				"equipment/enhance_unique"
			},
			{
				eApiType.EquipmentMultiEnhanceUnique,
				"equipment/multi_enhance_unique"
			},
			{
				eApiType.EquipmentRequest,
				"equipment/request"
			},
			{
				eApiType.EquipmentDonate,
				"equipment/donate"
			},
			{
				eApiType.EquipmentCraft,
				"equipment/craft"
			},
			{
				eApiType.EquipmentCraftUnique,
				"equipment/craft_unique"
			},
			{
				eApiType.EquipmentRankupUnique,
				"equipment/rankup_unique"
			},
			{
				eApiType.EquipmentGetRequest,
				"equipment/get_request"
			},
			{
				eApiType.EquipmentFreeEnhance,
				"equipment/free_enhance"
			},
			{
				eApiType.EquipmentFreeMultiEnhanceUnique,
				"equipment/free_multi_enhance_unique"
			},
			{
				eApiType.EquipmentEnhanceEx,
				"equipment/enhance_ex"
			},
			{
				eApiType.EquipmentRankupEx,
				"equipment/rankup_ex"
			},
			{
				eApiType.EquipmentProtectEx,
				"equipment/protect_ex"
			},
			{
				eApiType.EventHatsuneGachaIndex,
				"event/hatsune/gacha_index"
			},
			{
				eApiType.EventHatsuneGachaExec,
				"event/hatsune/gacha_exec"
			},
			{
				eApiType.EventHatsuneGachaReset,
				"event/hatsune/gacha_reset"
			},
			{
				eApiType.EventHatsuneGachaLineup,
				"event/hatsune/gacha_lineup"
			},
			{
				eApiType.FkeTop,
				"fke/top"
			},
			{
				eApiType.FkeSyncTop,
				"fke/sync_top"
			},
			{
				eApiType.FkeStart,
				"fke/start"
			},
			{
				eApiType.FkeFinish,
				"fke/finish"
			},
			{
				eApiType.FriendAccept,
				"friend/accept"
			},
			{
				eApiType.FriendCancel,
				"friend/cancel"
			},
			{
				eApiType.FriendFriendList,
				"friend/friend_list"
			},
			{
				eApiType.FriendPendingList,
				"friend/pending_list"
			},
			{
				eApiType.FriendReject,
				"friend/reject"
			},
			{
				eApiType.FriendRemove,
				"friend/remove"
			},
			{
				eApiType.FriendRequest,
				"friend/request"
			},
			{
				eApiType.FriendRequestList,
				"friend/request_list"
			},
			{
				eApiType.FriendSearch,
				"friend/search"
			},
			{
				eApiType.FriendMissionIndex,
				"friend/mission_index"
			},
			{
				eApiType.FriendMissionAccept,
				"friend/mission_accept"
			},
			{
				eApiType.FriendGetMissionTargetFriendCount,
				"friend/get_mission_target_friend_count"
			},
			{
				eApiType.GachaIndex,
				"gacha/index"
			},
			{
				eApiType.GachaExec,
				"gacha/exec"
			},
			{
				eApiType.GachaExchangePoint,
				"gacha/exchange_point"
			},
			{
				eApiType.GachaPrizeHistory,
				"gacha/prize_history"
			},
			{
				eApiType.GachaSelectPrize,
				"gacha/select_prize"
			},
			{
				eApiType.GachaPrizeReward,
				"gacha/prize_reward"
			},
			{
				eApiType.GachaSpecialFes,
				"gacha/special_fes"
			},
			{
				eApiType.GachaSelectPickup,
				"gacha/select_pickup"
			},
			{
				eApiType.GrandArenaInfo,
				"grand_arena/info"
			},
			{
				eApiType.GrandArenaSearch,
				"grand_arena/search"
			},
			{
				eApiType.GrandArenaApply,
				"grand_arena/apply"
			},
			{
				eApiType.GrandArenaCancel,
				"grand_arena/cancel"
			},
			{
				eApiType.GrandArenaStart,
				"grand_arena/start"
			},
			{
				eApiType.GrandArenaFinish,
				"grand_arena/finish"
			},
			{
				eApiType.GrandArenaCancelInterval,
				"grand_arena/cancel_interval"
			},
			{
				eApiType.GrandArenaResetBattleNumber,
				"grand_arena/reset_battle_number"
			},
			{
				eApiType.GrandArenaRanking,
				"grand_arena/ranking"
			},
			{
				eApiType.GrandArenaHistory,
				"grand_arena/history"
			},
			{
				eApiType.GrandArenaHistoryDetail,
				"grand_arena/history_detail"
			},
			{
				eApiType.GrandArenaReplay,
				"grand_arena/replay"
			},
			{
				eApiType.GrandArenaGetDestinationGroup,
				"grand_arena/get_destination_group"
			},
			{
				eApiType.GrandArenaMoveGroup,
				"grand_arena/move_group"
			},
			{
				eApiType.GrandArenaTimeRewardAccept,
				"grand_arena/time_reward_accept"
			},
			{
				eApiType.GrandArenaSuspendFinish,
				"grand_arena/suspend_finish"
			},
			{
				eApiType.EventHatsuneTop,
				"event/hatsune/top"
			},
			{
				eApiType.EventHatsuneQuestTop,
				"event/hatsune/quest_top"
			},
			{
				eApiType.EventHatsuneQuestStart,
				"event/hatsune/quest_start"
			},
			{
				eApiType.EventHatsuneQuestFinish,
				"event/hatsune/quest_finish"
			},
			{
				eApiType.EventHatsuneQuestRetire,
				"event/hatsune/quest_retire"
			},
			{
				eApiType.EventHatsuneQuestSkip,
				"event/hatsune/quest_skip"
			},
			{
				eApiType.EventHatsuneMissionIndex,
				"event/hatsune/mission_index"
			},
			{
				eApiType.EventHatsuneMissionAccept,
				"event/hatsune/mission_accept"
			},
			{
				eApiType.EventHatsuneBossBattleRetire,
				"event/hatsune/boss_battle_retire"
			},
			{
				eApiType.EventHatsuneBossBattleStart,
				"event/hatsune/boss_battle_start"
			},
			{
				eApiType.EventHatsuneBossBattleFinish,
				"event/hatsune/boss_battle_finish"
			},
			{
				eApiType.EventHatsuneBossBattleSkip,
				"event/hatsune/boss_battle_skip"
			},
			{
				eApiType.EventHatsuneRecoverChallenge,
				"event/hatsune/recover_challenge"
			},
			{
				eApiType.EventHatsuneSpecialBattleStart,
				"event/hatsune/special_battle_start"
			},
			{
				eApiType.EventHatsuneSpecialBattleFinish,
				"event/hatsune/special_battle_finish"
			},
			{
				eApiType.EventHatsuneSpecialBattleRetire,
				"event/hatsune/special_battle_retire"
			},
			{
				eApiType.EventHatsuneSpecialBattleExStart,
				"event/hatsune/special_battle_ex_start"
			},
			{
				eApiType.EventHatsuneSpecialBattleExFinish,
				"event/hatsune/special_battle_ex_finish"
			},
			{
				eApiType.EventHatsuneSpecialBattleExRetire,
				"event/hatsune/special_battle_ex_retire"
			},
			{
				eApiType.EventHatsuneSpecialBattleExHistory,
				"event/hatsune/special_battle_ex_history"
			},
			{
				eApiType.EventHatsuneSpecialBattleExReset,
				"event/hatsune/special_battle_ex_reset"
			},
			{
				eApiType.EventHatsuneQuizAnswer,
				"event/hatsune/quiz_answer"
			},
			{
				eApiType.EventHatsuneDearTop,
				"event/hatsune/dear_top"
			},
			{
				eApiType.EventHatsuneDearFinish,
				"event/hatsune/dear_finish"
			},
			{
				eApiType.EventHatsuneReadDiary,
				"event/hatsune/read_diary"
			},
			{
				eApiType.EventHatsuneReadRelayStory,
				"event/hatsune/read_relay_story"
			},
			{
				eApiType.EventHatsuneReadOmpStory,
				"event/hatsune/read_omp_story"
			},
			{
				eApiType.EventHatsuneReadNyxStory,
				"event/hatsune/read_nyx_story"
			},
			{
				eApiType.EventHatsuneChangeNyxItemColor,
				"event/hatsune/change_nyx_item_color"
			},
			{
				eApiType.HomeIndex,
				"home/index"
			},
			{
				eApiType.ItemExp,
				"item/exp"
			},
			{
				eApiType.ItemSell,
				"item/sell"
			},
			{
				eApiType.ItemRecycleEx,
				"item/recycle_ex"
			},
			{
				eApiType.ItemETicketExchange,
				"item_e_ticket/exchange"
			},
			{
				eApiType.MusicBuy,
				"music/buy"
			},
			{
				eApiType.MusicTop,
				"music/top"
			},
			{
				eApiType.MusicSet,
				"music/set"
			},
			{
				eApiType.KaiserBattleTop,
				"kaiser_battle/top"
			},
			{
				eApiType.KaiserBattleUpdateDeck,
				"kaiser_battle/update_deck"
			},
			{
				eApiType.KaiserBattleSubStart,
				"kaiser_battle/sub_start"
			},
			{
				eApiType.KaiserBattleSubFinish,
				"kaiser_battle/sub_finish"
			},
			{
				eApiType.KaiserBattleMainStart,
				"kaiser_battle/main_start"
			},
			{
				eApiType.KaiserBattleMainFinish,
				"kaiser_battle/main_finish"
			},
			{
				eApiType.KaiserBattleMainRetire,
				"kaiser_battle/main_retire"
			},
			{
				eApiType.KaiserBattleSetSupportUnit,
				"kaiser_battle/set_support_unit"
			},
			{
				eApiType.KaiserBattleSupportList,
				"kaiser_battle/support_list"
			},
			{
				eApiType.KaiserBattleGetMainBossInfo,
				"kaiser_battle/get_main_boss_info"
			},
			{
				eApiType.KaiserBattleMySupportList,
				"kaiser_battle/my_support_list"
			},
			{
				eApiType.KmkTop,
				"kmk/top"
			},
			{
				eApiType.KmkStart,
				"kmk/start"
			},
			{
				eApiType.KmkFinish,
				"kmk/finish"
			},
			{
				eApiType.LegionBattleTop,
				"legion_battle/top"
			},
			{
				eApiType.LegionBattleUpdateDeck,
				"legion_battle/update_deck"
			},
			{
				eApiType.LegionBattleSubStart,
				"legion_battle/sub_start"
			},
			{
				eApiType.LegionBattleSubFinish,
				"legion_battle/sub_finish"
			},
			{
				eApiType.LegionBattleMainStart,
				"legion_battle/main_start"
			},
			{
				eApiType.LegionBattleMainFinish,
				"legion_battle/main_finish"
			},
			{
				eApiType.LegionBattleMainRetire,
				"legion_battle/main_retire"
			},
			{
				eApiType.LegionBattleSetSupportUnit,
				"legion_battle/set_support_unit"
			},
			{
				eApiType.LegionBattleSupportList,
				"legion_battle/support_list"
			},
			{
				eApiType.LegionBattleGetMainBossInfo,
				"legion_battle/get_main_boss_info"
			},
			{
				eApiType.LegionBattleMissionIndex,
				"legion_battle/mission_index"
			},
			{
				eApiType.LegionBattleAfterIndex,
				"legion_battle/after_index"
			},
			{
				eApiType.LegionBattleMissionAccept,
				"legion_battle/mission_accept"
			},
			{
				eApiType.LoadIndex,
				"load/index"
			},
			{
				eApiType.LoadNextDayIndex,
				"load/next_day_index"
			},
			{
				eApiType.LogBattleLog2,
				"log/battle_log2"
			},
			{
				eApiType.CharaFortuneDraw,
				"chara_fortune/draw"
			},
			{
				eApiType.MirokuBattleGetBossInfo,
				"miroku_battle/get_boss_info"
			},
			{
				eApiType.MirokuBattleFinish,
				"miroku_battle/finish"
			},
			{
				eApiType.MirokuBattleRetire,
				"miroku_battle/retire"
			},
			{
				eApiType.MirokuBattleStart,
				"miroku_battle/start"
			},
			{
				eApiType.MirokuBattleTop,
				"miroku_battle/top"
			},
			{
				eApiType.MirokuBattleUpdateDeck,
				"miroku_battle/update_deck"
			},
			{
				eApiType.MissionIndex,
				"mission/index"
			},
			{
				eApiType.MissionAccept,
				"mission/accept"
			},
			{
				eApiType.MyPageSetMyPage,
				"my_page/set_my_page"
			},
			{
				eApiType.MyPageRegisterMyPage,
				"my_page/register_my_page"
			},
			{
				eApiType.MyPartySetParty,
				"my_party/set_party"
			},
			{
				eApiType.MyPartySetTab,
				"my_party/set_tab"
			},
			{
				eApiType.MyQuestUpdateSkipQuestList,
				"my_quest/update_skip_quest_list"
			},
			{
				eApiType.MyQuestUpdateTab,
				"my_quest/update_tab"
			},
			{
				eApiType.PctTop,
				"pct/top"
			},
			{
				eApiType.PctStart,
				"pct/start"
			},
			{
				eApiType.PctFinish,
				"pct/finish"
			},
			{
				eApiType.PictureBookIndex,
				"picture_book/index"
			},
			{
				eApiType.PkbTop,
				"pkb/top"
			},
			{
				eApiType.PkbStartSolo,
				"pkb/start_solo"
			},
			{
				eApiType.PkbStartVs,
				"pkb/start_vs"
			},
			{
				eApiType.PkbFinishSolo,
				"pkb/finish_solo"
			},
			{
				eApiType.PkbFinishVs,
				"pkb/finish_vs"
			},
			{
				eApiType.PkbReadCatalog,
				"pkb/read_catalog"
			},
			{
				eApiType.PkbReadRanking,
				"pkb/read_ranking"
			},
			{
				eApiType.PracticeFriendBattleTop,
				"practice/friend_battle_top"
			},
			{
				eApiType.PracticeUpdateDeck,
				"practice/update_deck"
			},
			{
				eApiType.PracticeFriendBattleStart,
				"practice/friend_battle_start"
			},
			{
				eApiType.PracticeFriendBattleFinish,
				"practice/friend_battle_finish"
			},
			{
				eApiType.PresentIndex,
				"present/index"
			},
			{
				eApiType.PresentReceive,
				"present/receive"
			},
			{
				eApiType.PresentReceiveAll,
				"present/receive_all"
			},
			{
				eApiType.PresentHistory,
				"present/history"
			},
			{
				eApiType.ProfileGetProfile,
				"profile/get_profile"
			},
			{
				eApiType.ProfileRename,
				"profile/rename"
			},
			{
				eApiType.ProfileUpdateComment,
				"profile/update_comment"
			},
			{
				eApiType.ProfileFavoriteUnit,
				"profile/favorite_unit"
			},
			{
				eApiType.ProfileSetBirthday,
				"profile/set_birthday"
			},
			{
				eApiType.ProfileMakerGetMyProfile,
				"profile_maker/get_my_profile"
			},
			{
				eApiType.ProfileMakerSetMyProfile,
				"profile_maker/set_my_profile"
			},
			{
				eApiType.ProfileMakerGetClanProfile,
				"profile_maker/get_clan_profile"
			},
			{
				eApiType.ProfileMakerSetClanProfile,
				"profile_maker/set_clan_profile"
			},
			{
				eApiType.PsyTop,
				"psy/top"
			},
			{
				eApiType.PsyExchange,
				"psy/exchange"
			},
			{
				eApiType.PsyReadDrama,
				"psy/read_drama"
			},
			{
				eApiType.PsyReadPuddingNote,
				"psy/read_pudding_note"
			},
			{
				eApiType.PsyGetPudding,
				"psy/get_pudding"
			},
			{
				eApiType.PsyStartCooking,
				"psy/start_cooking"
			},
			{
				eApiType.QuestStart,
				"quest/start"
			},
			{
				eApiType.QuestFinish,
				"quest/finish"
			},
			{
				eApiType.QuestRetire,
				"quest/retire"
			},
			{
				eApiType.QuestQuestSkip,
				"quest/quest_skip"
			},
			{
				eApiType.QuestQuestSkipMultiple,
				"quest/quest_skip_multiple"
			},
			{
				eApiType.QuestRecoverChallenge,
				"quest/recover_challenge"
			},
			{
				eApiType.QuestRecoverChallengeMultiple,
				"quest/recover_challenge_multiple"
			},
			{
				eApiType.TrainingQuestStart,
				"training_quest/start"
			},
			{
				eApiType.TrainingQuestFinish,
				"training_quest/finish"
			},
			{
				eApiType.TrainingQuestRetire,
				"training_quest/retire"
			},
			{
				eApiType.TrainingQuestQuestSkip,
				"training_quest/quest_skip"
			},
			{
				eApiType.QuestReplayList,
				"quest/replay_list"
			},
			{
				eApiType.QuestReplay,
				"quest/replay"
			},
			{
				eApiType.QuestReplayReport,
				"quest/replay_report"
			},
			{
				eApiType.Rarity6QuestStart,
				"rarity_6_quest/start"
			},
			{
				eApiType.Rarity6QuestFinish,
				"rarity_6_quest/finish"
			},
			{
				eApiType.RoomStart,
				"room/start"
			},
			{
				eApiType.RoomUpdate,
				"room/update"
			},
			{
				eApiType.RoomVisit,
				"room/visit"
			},
			{
				eApiType.RoomLike,
				"room/like"
			},
			{
				eApiType.RoomLikeHistory,
				"room/like_history"
			},
			{
				eApiType.RoomClanMembers,
				"room/clan_members"
			},
			{
				eApiType.RoomExtendStorage,
				"room/extend_storage"
			},
			{
				eApiType.RoomBuy,
				"room/buy"
			},
			{
				eApiType.RoomSell,
				"room/sell"
			},
			{
				eApiType.RoomGiveGift,
				"room/give_gift"
			},
			{
				eApiType.RoomLevelUpStart,
				"room/level_up_start"
			},
			{
				eApiType.RoomLevelUpStop,
				"room/level_up_stop"
			},
			{
				eApiType.RoomLevelUpEnd,
				"room/level_up_end"
			},
			{
				eApiType.RoomMultiGiveGift,
				"room/multi_give_gift"
			},
			{
				eApiType.RoomMultiLevelUpEnd,
				"room/multi_level_up_end"
			},
			{
				eApiType.RoomLevelUpShortening,
				"room/level_up_shortening"
			},
			{
				eApiType.RoomReceive,
				"room/receive"
			},
			{
				eApiType.RoomReceiveAll,
				"room/receive_all"
			},
			{
				eApiType.RoomGetMysetList,
				"room/get_myset_list"
			},
			{
				eApiType.RoomSaveMyset,
				"room/save_myset"
			},
			{
				eApiType.RoomDeleteMyset,
				"room/delete_myset"
			},
			{
				eApiType.RoomRenameMyset,
				"room/rename_myset"
			},
			{
				eApiType.RoomFreeGift,
				"room/free_gift"
			},
			{
				eApiType.SekaiTop,
				"sekai/top"
			},
			{
				eApiType.SekaiStart,
				"sekai/start"
			},
			{
				eApiType.SekaiFinish,
				"sekai/finish"
			},
			{
				eApiType.SekaiHistoryReport,
				"sekai/history_report"
			},
			{
				eApiType.SekaiRanking,
				"sekai/ranking"
			},
			{
				eApiType.SekaiRankingInClan,
				"sekai/ranking_in_clan"
			},
			{
				eApiType.SekaiRetire,
				"sekai/retire"
			},
			{
				eApiType.SekaiSupportUnitList2,
				"sekai/support_unit_list_2"
			},
			{
				eApiType.SerialCodeRegister,
				"serial_code/register"
			},
			{
				eApiType.EventShioriArchiveTop,
				"event/shiori/archive_top"
			},
			{
				eApiType.EventShioriFavorite,
				"event/shiori/favorite"
			},
			{
				eApiType.EventShioriEventTop,
				"event/shiori/event_top"
			},
			{
				eApiType.EventShioriQuestStart,
				"event/shiori/quest_start"
			},
			{
				eApiType.EventShioriQuestFinish,
				"event/shiori/quest_finish"
			},
			{
				eApiType.EventShioriQuestRetire,
				"event/shiori/quest_retire"
			},
			{
				eApiType.EventShioriQuestSkip,
				"event/shiori/quest_skip"
			},
			{
				eApiType.EventShioriMissionIndex,
				"event/shiori/mission_index"
			},
			{
				eApiType.EventShioriMissionAccept,
				"event/shiori/mission_accept"
			},
			{
				eApiType.EventShioriBossBattleStart,
				"event/shiori/boss_battle_start"
			},
			{
				eApiType.EventShioriBossBattleFinish,
				"event/shiori/boss_battle_finish"
			},
			{
				eApiType.EventShioriBossBattleRetire,
				"event/shiori/boss_battle_retire"
			},
			{
				eApiType.EventShioriQuizAnswer,
				"event/shiori/quiz_answer"
			},
			{
				eApiType.EventShioriDearTop,
				"event/shiori/dear_top"
			},
			{
				eApiType.EventShioriDearFinish,
				"event/shiori/dear_finish"
			},
			{
				eApiType.EventShioriReadDiary,
				"event/shiori/read_diary"
			},
			{
				eApiType.EventShioriReadRelayStory,
				"event/shiori/read_relay_story"
			},
			{
				eApiType.EventShioriReadNyxStory,
				"event/shiori/read_nyx_story"
			},
			{
				eApiType.ShopItemList,
				"shop/item_list"
			},
			{
				eApiType.ShopBuy,
				"shop/buy"
			},
			{
				eApiType.ShopBuyMultiple,
				"shop/buy_multiple"
			},
			{
				eApiType.ShopReset,
				"shop/reset"
			},
			{
				eApiType.ShopAlchemy,
				"shop/alchemy"
			},
			{
				eApiType.ShopRecoverStamina,
				"shop/recover_stamina"
			},
			{
				eApiType.ShopCloseLimitedShop,
				"shop/close_limited_shop"
			},
			{
				eApiType.ShopCloseDailyShop,
				"shop/close_daily_shop"
			},
			{
				eApiType.ShopComebackTutorialDailyShop,
				"shop/comeback_tutorial_daily_shop"
			},
			{
				eApiType.ShopDrawFromBank,
				"shop/draw_from_bank"
			},
			{
				eApiType.ShopDetailGold,
				"shop/detail_gold"
			},
			{
				eApiType.ShopDetailJewel,
				"shop/detail_jewel"
			},
			{
				eApiType.SjrTop,
				"sjr/top"
			},
			{
				eApiType.SjrStart,
				"sjr/start"
			},
			{
				eApiType.SjrFinish,
				"sjr/finish"
			},
			{
				eApiType.SkillSetFree,
				"skill/set_free"
			},
			{
				eApiType.SkillRemoveFree,
				"skill/remove_free"
			},
			{
				eApiType.SkillLevelUp,
				"skill/level_up"
			},
			{
				eApiType.SpaceTop,
				"space/top"
			},
			{
				eApiType.SpaceStart,
				"space/start"
			},
			{
				eApiType.SpaceFinish,
				"space/finish"
			},
			{
				eApiType.SpaceRetire,
				"space/retire"
			},
			{
				eApiType.SpaceSupportUnitList2,
				"space/support_unit_list_2"
			},
			{
				eApiType.SpaceStoryCheck,
				"space/story_check"
			},
			{
				eApiType.SpaceStoryStart,
				"space/story_start"
			},
			{
				eApiType.SreMissionAccept,
				"sre/mission_accept"
			},
			{
				eApiType.SreMissionIndex,
				"sre/mission_index"
			},
			{
				eApiType.SreSetSupportUnit,
				"sre/set_support_unit"
			},
			{
				eApiType.SreBattleFinish,
				"sre/battle_finish"
			},
			{
				eApiType.SreBattleStart,
				"sre/battle_start"
			},
			{
				eApiType.SreSupportList,
				"sre/support_list"
			},
			{
				eApiType.SreTop,
				"sre/top"
			},
			{
				eApiType.SreUpdateDeck,
				"sre/update_deck"
			},
			{
				eApiType.SreAfterIndex,
				"sre/after_index"
			},
			{
				eApiType.SrtTop,
				"srt/top"
			},
			{
				eApiType.SrtStart,
				"srt/start"
			},
			{
				eApiType.SrtFinish,
				"srt/finish"
			},
			{
				eApiType.SrtReadCatalog,
				"srt/read_catalog"
			},
			{
				eApiType.StoryStart,
				"story/start"
			},
			{
				eApiType.StoryQuestStart,
				"story/quest_start"
			},
			{
				eApiType.StoryCheck,
				"story/check"
			},
			{
				eApiType.StoryForceRelease,
				"story/force_release"
			},
			{
				eApiType.StoryBulkSkip,
				"story/bulk_skip"
			},
			{
				eApiType.SubStoryLtoReadStory,
				"sub_story/lto/read_story"
			},
			{
				eApiType.SubStorySkeConfirm,
				"sub_story/ske/confirm"
			},
			{
				eApiType.SubStorySkeReadStory,
				"sub_story/ske/read_story"
			},
			{
				eApiType.SubStorySspReadSspStory,
				"sub_story/ssp/read_ssp_story"
			},
			{
				eApiType.SubStorySvdReadStory,
				"sub_story/svd/read_story"
			},
			{
				eApiType.SubStoryMhpReadStory,
				"sub_story/mhp/read_story"
			},
			{
				eApiType.SubStoryNopReadStory,
				"sub_story/nop/read_story"
			},
			{
				eApiType.SubStoryYsnReadStory,
				"sub_story/ysn/read_story"
			},
			{
				eApiType.SubStoryLsvReadStory,
				"sub_story/lsv/read_story"
			},
			{
				eApiType.SubStoryXehReadStory,
				"sub_story/xeh/read_story"
			},
			{
				eApiType.SubStoryDsbReadStory,
				"sub_story/dsb/read_story"
			},
			{
				eApiType.SubStoryMmeReadStory,
				"sub_story/mme/read_story"
			},
			{
				eApiType.SubStoryMmePutPiece,
				"sub_story/mme/put_piece"
			},
			{
				eApiType.SupportUnitChangeSetting,
				"support_unit/change_setting"
			},
			{
				eApiType.SupportUnitGetSetting,
				"support_unit/get_setting"
			},
			{
				eApiType.SupportUnitGetFriendSupportUnitList,
				"support_unit/get_friend_support_unit_list"
			},
			{
				eApiType.TaqTop,
				"taq/top"
			},
			{
				eApiType.TaqSoloStart,
				"taq/solo_start"
			},
			{
				eApiType.TaqSoloFinish,
				"taq/solo_finish"
			},
			{
				eApiType.TaqReadQuizStatus,
				"taq/read_quiz_status"
			},
			{
				eApiType.TaqCoopCreateRoom,
				"taq/coop_create_room"
			},
			{
				eApiType.TaqCoopChangeEntryType,
				"taq/coop_change_entry_type"
			},
			{
				eApiType.TaqCoopCancelRoom,
				"taq/coop_cancel_room"
			},
			{
				eApiType.TaqCoopEnterRoomAuto,
				"taq/coop_enter_room_auto"
			},
			{
				eApiType.TaqCoopRoomList,
				"taq/coop_room_list"
			},
			{
				eApiType.TaqCoopEnterRoomById,
				"taq/coop_enter_room_by_id"
			},
			{
				eApiType.TaqCoopLeaveRoom,
				"taq/coop_leave_room"
			},
			{
				eApiType.TaqCoopRoomPolling,
				"taq/coop_room_polling"
			},
			{
				eApiType.TaqCoopQuizFirstInterval,
				"taq/coop_quiz_first_interval"
			},
			{
				eApiType.TaqCoopQuizStart,
				"taq/coop_quiz_start"
			},
			{
				eApiType.TaqCoopQuizPolling,
				"taq/coop_quiz_polling"
			},
			{
				eApiType.TaqCoopAnswer,
				"taq/coop_answer"
			},
			{
				eApiType.TaqCoopUseHint,
				"taq/coop_use_hint"
			},
			{
				eApiType.TaqCoopAnswerNpc,
				"taq/coop_answer_npc"
			},
			{
				eApiType.TaqCoopStartInterval,
				"taq/coop_start_interval"
			},
			{
				eApiType.TaqCoopNextQuiz,
				"taq/coop_next_quiz"
			},
			{
				eApiType.TaqCoopQuizFinish,
				"taq/coop_quiz_finish"
			},
			{
				eApiType.TaqCoopResult,
				"taq/coop_result"
			},
			{
				eApiType.TaqCoopRetrySameMember,
				"taq/coop_retry_same_member"
			},
			{
				eApiType.TaqCoopCloseRetrySameMember,
				"taq/coop_close_retry_same_member"
			},
			{
				eApiType.TipsAddUserTips,
				"tips/add_user_tips"
			},
			{
				eApiType.TowerTop,
				"tower/top"
			},
			{
				eApiType.TowerBattleStart,
				"tower/battle_start"
			},
			{
				eApiType.TowerBattleFinish,
				"tower/battle_finish"
			},
			{
				eApiType.TowerRehearsalStart,
				"tower/rehearsal_start"
			},
			{
				eApiType.TowerRehearsalFinish,
				"tower/rehearsal_finish"
			},
			{
				eApiType.TowerSupportUnitList,
				"tower/support_unit_list"
			},
			{
				eApiType.TowerSupportUnitList2,
				"tower/support_unit_list_2"
			},
			{
				eApiType.TowerBattleRetire,
				"tower/battle_retire"
			},
			{
				eApiType.TowerReset,
				"tower/reset"
			},
			{
				eApiType.TowerExBattleStart,
				"tower/ex_battle_start"
			},
			{
				eApiType.TowerExBattleFinish,
				"tower/ex_battle_finish"
			},
			{
				eApiType.TowerExSupportUnitList,
				"tower/ex_support_unit_list"
			},
			{
				eApiType.TowerExSupportUnitList2,
				"tower/ex_support_unit_list_2"
			},
			{
				eApiType.TowerExBattleRetire,
				"tower/ex_battle_retire"
			},
			{
				eApiType.TowerReplayList,
				"tower/replay_list"
			},
			{
				eApiType.TowerReplay,
				"tower/replay"
			},
			{
				eApiType.TowerReplayReport,
				"tower/replay_report"
			},
			{
				eApiType.TowerCloisterBattleSkip,
				"tower/cloister_battle_skip"
			},
			{
				eApiType.TowerCloisterBattleStart,
				"tower/cloister_battle_start"
			},
			{
				eApiType.TowerCloisterBattleFinish,
				"tower/cloister_battle_finish"
			},
			{
				eApiType.TowerCloisterBattleRetire,
				"tower/cloister_battle_retire"
			},
			{
				eApiType.TowerBattleSkip,
				"tower/battle_skip"
			},
			{
				eApiType.TravelDecreaseTime,
				"travel/decrease_time"
			},
			{
				eApiType.TravelReceive,
				"travel/receive"
			},
			{
				eApiType.TravelReceiveAll,
				"travel/receive_all"
			},
			{
				eApiType.TravelReceiveTopEventReward,
				"travel/receive_top_event_reward"
			},
			{
				eApiType.TravelRetire,
				"travel/retire"
			},
			{
				eApiType.TravelStart,
				"travel/start"
			},
			{
				eApiType.TravelTop,
				"travel/top"
			},
			{
				eApiType.TravelUpdatePriorityUnitList,
				"travel/update_priority_unit_list"
			},
			{
				eApiType.TravelCloseSecretTravel,
				"travel/close_secret_travel"
			},
			{
				eApiType.TravelGetTravelQuestStatus,
				"travel/get_travel_quest_status"
			},
			{
				eApiType.TrialBattleFinish,
				"trial_battle/finish"
			},
			{
				eApiType.TrialBattleMissionAccept,
				"trial_battle/mission_accept"
			},
			{
				eApiType.TrialBattleStart,
				"trial_battle/start"
			},
			{
				eApiType.TrialBattleTop,
				"trial_battle/top"
			},
			{
				eApiType.TrialBattleClanBattleStart,
				"trial_battle/clan_battle_start"
			},
			{
				eApiType.TrialBattleClanBattleFinish,
				"trial_battle/clan_battle_finish"
			},
			{
				eApiType.TrialBattleSupportUnitList,
				"trial_battle/support_unit_list"
			},
			{
				eApiType.TtkTop,
				"ttk/top"
			},
			{
				eApiType.TtkChooseWeapon,
				"ttk/choose_weapon"
			},
			{
				eApiType.TtkReadCatalog,
				"ttk/read_catalog"
			},
			{
				eApiType.TtkReadStory,
				"ttk/read_story"
			},
			{
				eApiType.TtkStart,
				"ttk/start"
			},
			{
				eApiType.TtkFinish,
				"ttk/finish"
			},
			{
				eApiType.TutorialUpdateStep,
				"tutorial/update_step"
			},
			{
				eApiType.UekUekTop,
				"uek/uek_top"
			},
			{
				eApiType.UekBossBattleStart,
				"uek/boss_battle_start"
			},
			{
				eApiType.UekBossBattleFinish,
				"uek/boss_battle_finish"
			},
			{
				eApiType.UekBossBattleRetire,
				"uek/boss_battle_retire"
			},
			{
				eApiType.UnitAutomaticEnhance,
				"unit/automatic_enhance"
			},
			{
				eApiType.UnitChangeSkin,
				"unit/change_skin"
			},
			{
				eApiType.UnitUnlockUnit,
				"unit/unlock_unit"
			},
			{
				eApiType.UnitEquip,
				"unit/equip"
			},
			{
				eApiType.UnitMultiEquip,
				"unit/multi_equip"
			},
			{
				eApiType.UnitMultiPromotion,
				"unit/multi_promotion"
			},
			{
				eApiType.UnitEquipUnique,
				"unit/equip_unique"
			},
			{
				eApiType.UnitPromotion,
				"unit/promotion"
			},
			{
				eApiType.UnitCraftEquip,
				"unit/craft_equip"
			},
			{
				eApiType.UnitCraftEquipUnique,
				"unit/craft_equip_unique"
			},
			{
				eApiType.UnitMultiEvolution,
				"unit/multi_evolution"
			},
			{
				eApiType.UnitFavorite,
				"unit/favorite"
			},
			{
				eApiType.UnitEvolutionRarity6,
				"unit/evolution_rarity_6"
			},
			{
				eApiType.UnitUnlockRarity6Slot,
				"unit/unlock_rarity_6_slot"
			},
			{
				eApiType.UnitMultiUnlockRarity6Slot,
				"unit/multi_unlock_rarity_6_slot"
			},
			{
				eApiType.UnitChangeRarity,
				"unit/change_rarity"
			},
			{
				eApiType.UnitFreeAutomaticEnhance,
				"unit/free_automatic_enhance"
			},
			{
				eApiType.UnitFreeEquip,
				"unit/free_equip"
			},
			{
				eApiType.UnitFreeMultiEvolution,
				"unit/free_multi_evolution"
			},
			{
				eApiType.UnitFreeLevelUp,
				"unit/free_level_up"
			},
			{
				eApiType.UnitFreePromotion,
				"unit/free_promotion"
			},
			{
				eApiType.UnitSetGrowthItem,
				"unit/set_growth_item"
			},
			{
				eApiType.UnitGrowthEnhance,
				"unit/growth_enhance"
			},
			{
				eApiType.UnitRegisterItem,
				"unit/register_item"
			},
			{
				eApiType.UnitUnlockRedeemUnit,
				"unit/unlock_redeem_unit"
			},
			{
				eApiType.UnitExceedLevelLimit,
				"unit/exceed_level_limit"
			},
			{
				eApiType.UnitExceedLevelLimitWithExceedItem,
				"unit/exceed_level_limit_with_exceed_item"
			},
			{
				eApiType.UnitSetGrowthItemUnique,
				"unit/set_growth_item_unique"
			},
			{
				eApiType.UnitEquipEx,
				"unit/equip_ex"
			},
			{
				eApiType.UnitGetMultiAutomaticEnhanceSetting,
				"unit/get_multi_automatic_enhance_setting"
			},
			{
				eApiType.UnitChangeMultiAutomaticEnhanceSetting,
				"unit/change_multi_automatic_enhance_setting"
			},
			{
				eApiType.UnitMultiAutomaticEnhance,
				"unit/multi_automatic_enhance"
			},
			{
				eApiType.VoteExec,
				"vote/exec"
			},
			{
				eApiType.VoteTop,
				"vote/top"
			},
			{
				eApiType.WacGetStatus,
				"wac/get_status"
			},
			{
				eApiType.WacRead,
				"wac/read"
			}
]

urls = dict()

for x in urls_t:
    x = type([])(x)
    a = x[0]; b = x[1]
    if '/' in a:
        t = a; a = b; b = t
    urls[a] = b

urls2 = dict()
urls['CheckAgreement'] = 'check/check_agreement'
urls2['CheckAgreement'] = 'CheckAgreement'
urls2['RoomClanMember'] = 'RoomClanMembers'
urls2['RoomReceiveItemAll'] = 'RoomReceiveAll'
urls2['RoomMysetList'] = 'RoomGetMysetList'
urls2['DimensionFaultReset'] = 'TdfReset'
urls2['AccountDeleteRequest'] = 'AccountDeleteDeleteRequest'
urls['GetFriendSupportUnitList'] = 'SupportUnitGetFriendSupportUnitList'
urls['GetTipsList'] = 'TipsGetTipsList'

refered_enum = []
headers = [
	'Arcade',
	'Arena',
	'Check',
	'ClanBattle',
	'Dungeon',
	'Emblem',
	'Fke',
	'Friend',
	'Gacha',
	'GrandArena',
	'KaiserBattle',
	'Kmk',
	'Music',
	'Pct',
	'ProfileMaker',
	'Psy'
	'Room',
	'SeasonPass',
	'Sekai',
	'Shiori',
	'Shop',
	'Srt',
	'SupportUnit',
	'Test',
	'Tower',
	'Ttk',
	'Unit',
	'Space'
]
with open('ApiManager.cs', 'r', encoding='utf8') as f:
	text0 = f.read()
with open('ClanDefine.cs', 'r', encoding='utf8') as f:
	text1 = f.read()
for match in addtask.finditer(text0):
	t = match.group(3)
	t = t[0].upper() + t[1:]
	urls2[t] = match.group(1)

commons = {}
text0 = text0.replace('		public class ', '		private class ')
def yieldFiles():
	for file in os.listdir('.'):
		if not file.endswith('.cs'): continue
		with open(file, 'r', encoding='utf8') as f:
			text = f.read()
		yield (file, text)

	for split in text0.split('private class '):
		split = split.split('// Token: 0x020010C8 RID: 4296')[0]
		file = split.split(' ')[0] + '.cs'
		split = 'public class ' + split
		yield (file, split)
  
	for split in text1.split('public enum '):
		file = split.split('\n')[0].split(' ')[0] + '.cs'
		split = 'public enum ' + split
		yield (file, split)

fileCache = {}

for (file, text) in yieldFiles():
	fileCache[file] = text
	classname = file.split('.')[0]
	if not classname.endswith('PostParam'):
		if f'void Parse{classname}(JsonData _json)' not in text: continue
		if f'public {classname}(JsonData _json)' not in text: continue

	is_common = False
	types = set()

	if f'ReceiveParam' in classname:
		fp = fp_resp
		fp.write(f'class {classname[:-12]}Response(ResponseBase):\n')
	elif f'PostParam' in classname:
		fp = fp_req
		fp.write(f'class {classname[:-9]}Request(Request[{classname[:-9]}Response]):\n')
	else:
		is_common = True
		fp = StringIO()
		fp.write(f'class {classname}(BaseModel):\n')
	has_member = False
	for match in member.finditer(text):
		if match.group(2) == 'class': continue
		name = match.group(3)
		name = upper.sub(lambda x: '_' + x.group(1).lower(), name)
		if name[0] == '_': name = name[1:]
		if name == 'break' or name == 'from' or name == 'def': name = '_' + name
		if 'parsed' in name: continue
		type = match.group(2)
		type = type.replace('ObscuredInt', 'int')
		type = type.replace('ObscuredBool', 'bool')
		type = type.replace('ObscuredLong', 'long')
		type = type.replace('ObscuredString', 'string')
		type = type.replace('ObscuredFloat', 'float')
		type = type.replace('DateTime', 'long')
		type = list.sub(lambda x: f'List[{x.group(1)}]', type)
		if type.endswith('[]'): type = f'List[{type[:-2]}]'
		type = type.replace('long', 'int').replace('double', 'float').replace('string', 'str')
		fp.write(f'\t{name}: {type} = None\n')
		has_member = True
		if type.startswith('e'): refered_enum.append(type)
		else:
			if type.startswith('List'): types.add(type[5:-1])
			else: types.add(type)
	if f'PostParam' in classname:
		if classname[:-9] in urls2:
			fp.write(f'	@property\n	def url(self) -> str:\n		return "{urls[urls2[classname[:-9]]]}"\n')
		elif classname[:-9] in urls:
			fp.write(f'	@property\n	def url(self) -> str:\n		return "{urls[classname[:-9]]}"\n')
		else:
			header_used = []
			for header in headers:
				if classname.lower().startswith(header.lower()):
					header_used.append(header)
			if len(header_used) > 0:
				p1 = sorted(header_used, key=lambda x: len(x))[0]
				p2 = classname[len(p1):-9]
				p1 = upper.sub(lambda x: '_' + x.group(1).lower(), p1)
				p2 = upper.sub(lambda x: '_' + x.group(1).lower(), p2)
				if p1[0] == '_': p1 = p1[1:]
				if p2[0] == '_': p2 = p2[1:]

				fp.write(f'	@property\n	def url(self) -> str:\n		return "{p1}/{p2}"\n')
				has_member = True
			else:
				print(classname)

	if not has_member:
		fp.write('\tpass\n')

	if is_common:
		commons[classname] = (fp.getvalue(), types)

used = set(['int', 'str', 'bool', 'float'])
while len(commons) > 0:
	for key in [x for x in commons]:
		if len(commons[key][1] & used) == len(commons[key][1]):
			fp_common.write(commons[key][0])
			used.add(key)
			commons.pop(key)
			continue
for classname in set(refered_enum).union(set(['eGachaDrawType', 'eClanSupportMemberType', 'eSkillLocationCategory'])):
	fp = fp_enum
	text = fileCache[classname + '.cs']
	fp.write(f'class {classname}(Enum):\n')
	next = 0
	for match in enum.finditer(text):
		if match.group(2):
			fp.write(f'    {match.group(1)}{match.group(2)}\n')
			next = int(match.group(3)) + 1
		else:
			fp.write(f'    {match.group(1)} = {next}\n')
			next += 1